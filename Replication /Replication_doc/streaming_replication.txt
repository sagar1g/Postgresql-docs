**********************streaming replication***************************
Environment deatiles:- 
primary server:- 10.20.30.40
standby server:- 01.20.30.41
replication mode:- async

step1:-
update pg_hba conf file on primary server:-

ipv4:-
host   all     all   01.20.30.41/24   md5

replication:-
host  replication all 01.20.30.41/24   md5

step 2:- update postgresql.conf file:-
1.archive_mode=on
2.archive_command = 'cp %p /AumShanti/pgdatabase/archive/%f'  ----------------cp %p /app/archive/%f  
3.max_wal_sender = 10 
4.wal_level = repllica
5.wal_keep_segments = 50   --------------------(wal_keep_size = 50MB ----postgresql-15)
6.wal_log_hint = on
7.hot_standby = on
8.listen_address = *
=======================================================================================================
su - postgres

cp /etc/postgresql/16/main/postgresql.conf /etc/postgresql/16/main/postgresql.conf_20250702

vi /etc/postgresql/16/main/postgresql.conf

listen_addresses='*'
wal_level=replica
max_wal_senders=10
wal_keep_size=256
hot_standby=on

Save and exit the configuration file.

::::: Explanation of the options :::::
ðŸ“Œ listen_addresses = '*'
- Tells PostgreSQL to listen on all network interfaces.
- Required so the standby server can connect to the primary server for replication.
ðŸ“Œ wal_level = replica
- Sets the level of information written to the WAL (Write-Ahead Log).
- The replica level is the minimum required for physical replication.
- Enables WAL archiving and streaming replication.
ðŸ“Œ max_wal_senders = 10
- Defines how many WAL sender processes the primary server can run simultaneously.
- Each standby server that connects consumes one WAL sender.
- Set this according to the number of standbys you plan to support.
ðŸ“Œ wal_keep_size = 256
- Specifies the minimum size (in MB) of WAL files to keep.
- Helps prevent replication failure due to missing WAL files if the standby is delayed.
ðŸ“Œ hot_standby = on
- Allows the standby server to accept read-only queries while in recovery mode.
- This setting must be enabled on the standby node.


step3:- on standby server:-

1.delete data directory 

2. stop postgres service

3.Run pg_basebackup to clone the standby instance
Pg_basebackup -h <master ip> -U repuser -p 5432 -D $PGDATA -Fp -Xs -P -R -C -S pgstandby
       -h =host
       -U = user
      -p = Port
       -D = data directory
      -F = format (plain or tar)
       -p = plain
     -X  = wal method ( none || fetch || stream)
      -s = stream
    -P  = Progress
    -R = write configuration for replication.
    -C = Creation of replication slot named by the -S option
   -S  = name of the replication slot.

step4:- start postgres service on standby

step 5:-verfiy:-

primary :- 
select * from pg_stat_replication;

standby :- 
select *  from pg_stat_wal_receiver;

lag:- 

select now() -pg_last_xact_replay_timestamp() as replication_lag;



to see archive genert manually we see these command:-
SELECT pg_switch_wal();

