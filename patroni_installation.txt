-----------------------etcd----------------------------------------------------

vi /etc/hosts                                                                      192.168.122.50 pgsql-vip

10.10.229.21  mhpbhesdbn1dcvm1
10.10.229.22 mhpbhesdbn2dcvm2
10.10.229.23  mhpbhesdbn3dcvm3

sudo apt -y install etcd
sudo systemctl stop etcd
sudo systemctl disable etcd
sudo rm -rf /var/lib/etcd/default
sudo mv /etc/default/etcd /etc/default/etcd-orig
sudo nano /etc/default/etcd   -----------------------------------------   vi  /etc/default/etcd
cd ~
nano .profile  ----------------------------------------------   vi .profile
top
nano /etc/hosts
sudo systemctl start etcd
systemctl enable etcd
systemctl status  etcd
systemctl status etcd.service

vi  /etc/default/etcd

ETCD_NAME=mhpbhesdbn2dcvm2
ETCD_DATA_DIR="/var/lib/etcd/mhpbhesdbn2dcvm2"
ETCD_LISTEN_PEER_URLS="http://10.10.229.22:2380"
ETCD_LISTEN_CLIENT_URLS="http://10.10.229.22:2379"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://10.10.229.22:2380"
ETCD_INITIAL_CLUSTER="mhpbhesdbn1dcvm1=http://10.10.229.21:2380,mhpbhesdbn2dcvm2=http://10.10.229.22:2380,mhpbhesdbn3dcvm3=http://10.10.229.23:2380"
ETCD_INITIAL_CLUSTER_STATE="new"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
ETCD_ADVERTISE_CLIENT_URLS="http://10.10.229.22:2379"
ETCD_ENABLE_V2="true"


vi .profile


export PGDATA="/mnt/data/patroni"
export ETCDCTL_API="3"
export PATRONI_ETCD_URL="http://127.0.0.1:2379"
export PATRONI_SCOPE="pg_cluster"
ENDPOINTS=$10.10.229.21:2379,$10.10.229.22:2379,$10.10.229.23:2379
#ENDPOINTS=$mhbkhesdbn1dcvm1:2379,$mhbkhesdbn2dcvm2:2379,$mhbkhesdbn3dcvm3:2379

---------------------------------postgresql installation------------------------------------------------------------------------------------------

First we have to create directory.
mkdir postgresql-15

1.downlaod postgres file:- 

wget https://ftp.postgresql.org/pub/source/v15.3/postgresql-15.6.tar.gz

2.untar file

tar -xzvf postgresql-15.3.tar.gz

3.create postgres user:-

sudo adduser postgres


4. add readline & zlib & xml:- 

sudo apt-get update
apt-get install libreadline-dev -y
apt install build-essential -y
apt install zlib1g-dev -y
sudo apt-get install libldap2-dev
sudo apt-get install libxml2
sudo apt autoremove
sudo apt-get install libxml2
apt-get install libxml2-dev -y
sudo apt-get install libxslt-dev -y

5.configure & make:-

./configure  --prefix=/usr/lib/pgsql-15.6  --with-ldap --with-libxml --with-libxslt
make && make install

6. configure contrib package:- 

make && make install


7.create data_directory:- 

makdir -p /application/postgresql-15/data----------------------------------------------------(data directory)

chown -R postgres:postgres  /application
chmod -R  750 /application/postgresql-15/data


8.switch user:- 

sudo su - postgres

9.create database cluster:- 

/usr/lib/pgsql-15.3/bin/initdb -D /application/postgresql-15/data

10. start postgres service:- 

/usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data  start -l log_file

11.install postgresql-client:-

apt -y  install postgresql-client-common
apt -y install postgresql-client-14 
 
12. if required create sockat file:- 

cd /var/run/
mkdir postgresql
chown postgres:postgres  postgresql
chmod -R 2775 postgresql 

add parameter on postgres config file:- 

vi postgresql.conf

unix_socket_directories = '/var/run/postgresql'
external_pid_file = '/var/run/postgresql/15-main.pid' 


13.create bash profile(env):-
 
vi .bash_profile ----------------------------------(postgres,root user)
export PATH=/usr/lib/pgsql-15.3/bin:$PATH
export PGDATA=/application/postgresql-15/data
export PGPORT=5432
export PGDATABASE=postgres
export PGHOST=/run/postgresql

source .bash_profile -----------------------------------(postgres,root user)

14.create postgresql service file:- 

vi /etc/systemd/system/postgresql-15.service

[Unit]
Description=PostgreSQL Database Server
After=network.target

[Service]
Type=forking
User=postgres
ExecStart=/usr/lib/pgsql-15.3/bin/pg_ctl -D /data/postgresql-15/data start
ExecStop=/usr/lib/pgsql-15.3/bin/pg_ctl -D /data/postgresql-15/data stop
ExecReload=/usr/lib/pgsql-15.3/bin/pg_ctl -D /data/postgresql-15/data reload
#PIDFile=/run/postgresql/15-main.pid
TimeoutSec=-10

[Install]
WantedBy=multi-user.target


systemctl daemon-reload
systemctl enable postgresql.service
systemctl start postgresql.service

15. configure log parameter on postgersql configuration file:- 
 
vi postgresql.conf:-
 
log_directory- ‘/data/postgresql-15/data/log’ 
logging_collector-on and open log_rotation_age=7d
log_destination = 'stderr'
log_rotation_size = 10MB 






-----------------------------------------------------------patroni installtion-------------------------------------------------------------------------

sudo apt -y install python3 python3-pip python3-dev libpq-dev
sudo pip3 install launchpadlib --upgrade setuptools psycopg2
sudo apt -y install python3-etcd patroni
sudo systemctl stop patroni
sudo systemctl disable patroni
sudo vi /etc/patroni/config.yml

 ls -l /etc/patroni/config.yml
 sudo chmod 644 /etc/patroni/config.yml
 systemctl start patroni
 systemctl status patroni
 --------------------------------------------------------------------------------------------------------------------------------------------------------------
 create this user in all node:-
 
 
 alter user postgres with password 'India@123456';
 
 create user admin with createdb createrole password 'admin';
 
 
 create user replicator with replication password 'replicator';
 
 SELECT * FROM pg_create_physical_replication_slot('vzhesdbn2dcvm2');
 
 
 node1 :- create repliaction slots
 
 
 
---------------------------------------------------------------------------------------------------------------------------------------------------------


create patroni config file in all node:-  
 
vi /etc/patroni/config.yml
 
scope: pg_cluster
namespace: /service/
name: mhpbhesdbn2dcvm2

restapi:
    listen: 10.10.229.22:8008
    connect_address: 10.10.229.22:8008

etcd:
    hosts: 10.10.229.21:2379,10.10.229.22:2379,10.10.229.23:2379

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    synchronous_mode: false
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:

  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - host replication replicator 127.0.0.1/24 trust
  - host replication replicator 10.10.229.21/24 trust
  - host replication replicator 10.10.229.22/24 trust
  - host replication replicator 10.10.229.23/24 trust
  - host all all 0.0.0.0/0 trust

  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb

postgresql:
  listen: 10.10.229.22:4702
  connect_address: 10.10.229.22:4702
  data_dir: /mnt/data/patroni
  bin_dir: /usr/lib/pgsql-15.6/bin
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: replicator
      password: replicator
    superuser:
      username: postgres
      password: India@123456

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
	
------------------------------------------------------------------------------------------------------------------------------------------------------------

vi postgresql.conf

# Do not edit this file manually!
# It will be overwritten by Patroni!
include 'postgresql.base.conf'

cluster_name = 'pg_cluster'
hot_standby = 'on'
listen_addresses = '10.10.229.21'
log_autovacuum_min_duration = '0'
log_checkpoints = 'True'
log_connections = 'True'
log_destination = 'stderr'
log_directory = 'pg_log'
log_disconnections = 'True'
log_error_verbosity = 'default'
log_filename = 'postgresql-%F_%a_%H.log'
log_hostname = 'False'
log_line_prefix = '%t [%p]: [%l-1] db=%d,user=%u'
log_lock_waits = 'True'
log_min_duration_statement = '1s'
log_min_error_statement = 'error'
log_min_messages = 'warning'
log_rotation_age = '60'
log_rotation_size = '1GB'
log_temp_files = '0'
log_truncate_on_rotation = 'True'
logging_collector = 'True'
max_connections = '1000'
max_locks_per_transaction = '64'
max_prepared_transactions = '0'
max_replication_slots = '10'
max_wal_senders = '10'
max_worker_processes = '8'
port = '4702'
track_commit_timestamp = 'off'
wal_keep_size = '128MB'
wal_level = 'replica'
wal_log_hints = 'on'
hba_file = '/mnt/data/patroni/pg_hba.conf'
ident_file = '/mnt/data/patroni/pg_ident.conf'

# recovery.conf
recovery_target = ''
recovery_target_lsn = ''
recovery_target_name = ''
recovery_target_time = ''
recovery_target_timeline = 'latest'
recovery_target_xid = ''

10.10.131.105

-----------------------------------------------------------------------------------------------------------------------------------------------

vi pg_hba.conf

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     trust
# IPv4 local connections:
host    all             all             127.0.0.1/32            trust
# IPv6 local connections:
host    all             all             ::1/128                 trust
# Allow replication connections from localhost, by a user with the
# replication privilege.
local   replication     all                                     trust
host    replication     all             127.0.0.1/32            trust
host    replication     all             ::1/128                 trust

host replication all 127.0.0.1/32 trust
host replication all 10.10.229.22/32 trust
host replication all 10.10.229.21/32 trust
host replication all 10.10.229.23/32 trust
host all all 0.0.0.0/0 trust

----------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------troubleshoot----------------------------------------------------------------
  
connect string:-

#primary_conninfo = 'user=postgres passfile=/tmp/pgpass host=10.10.99.138 port=4702 sslmode=prefer application_name=hesdbn1dcvm1 gssencmode=prefer channel_binding=prefer'
#primary_slot_name = 'hesdbn1dcvm1'



pg_basebackup -h 192.168.0.28 -U replicator -p 5432 -D $PGDATA -P -Xs -R

/usr/lib/pgsql-15.6/bin/pg_basebackup -D /data/postgresql-15/data -h 10.10.131.101   -U replicator  -p 5432 -Xs -R -P -v



patronictl -c /etc/patroni/config.yml list

pg_controldata /data/postgresql-14.7/data | grep "Latest checkpoint's TimeLineID"

/var/lib/postgresql# /usr/lib/pgsql-15.6/bin/pg_controldata -D /data/postgresql-15/data


patronictl -c /etc/patroni/config.yml restart vzhesdbn1dcvm1 --force --pending


/usr/lib/pgsql-15.6/bin/pg_resetwal -f /data/postgresql-15/data


patronictl -c /etc/patroni/postgres.yml edit-config pg_clusters
----------------------------------------------------------------------------------------------------------------------------------------------------------

NOTE:-
for patroni salve setup node:- we delete all file in data dirctory and start patroni service

------------------------------------------------------------------------------------------------------------------------------------------------------------
HAproxy installtion:- 

vi /etc/hosts

10.10.229.21  mhpbhesdbn1dcvm1
10.10.229.22 mhpbhesdbn2dcvm2
10.10.229.23  mhpbhesdbn3dcvm3

 apt install haproxy -y
 
 vi /etc/haproxy/haproxy.cfg

haproxy:- 


global
     log 127.0.0.1   local2
     log /dev/log    local0
     log /dev/log    local1 notice
     chroot /var/lib/haproxy
     stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
     stats timeout 30s
     user haproxy
     group haproxy
     maxconn 5000
     daemon

defaults
    mode                    tcp
    log                     global
    option                  tcplog
    retries                 5
    timeout queue           5m
    timeout connect         120s
    timeout client          30m
    timeout server          30m
    timeout check           30s
    maxconn                 5000
    timeout http-request    20s
timeout http-keep-alive     10s
timeout tunnel              2m
timeout client-fin          1s
timeout server-fin          1s

listen stats
    mode http
    bind *:7000
    stats enable
    stats uri /

listen primary
    bind *:4702
    mode tcp
    option httpchk OPTIONS /master
    http-check expect status 200
    option tcpka
    default-server inter 60s fall 3 rise 2 on-marked-down shutdown-sessions
    server mhpbhesdbn1dcvm1 10.10.229.21:4702 maxconn 5000 check port 8008
    server mhpbhesdbn2dcvm2 10.10.229.22:4702 maxconn 5000 check port 8008
    server mhpbhesdbn3dcvm3 10.10.229.23:4702 maxconn 5000 check port 8008


listen standby
    bind *:5001
    mode tcp
    balance roundrobin
    option httpchk OPTIONS /replica
    http-check expect status 200
    #default-server inter 60s fall 3 rise 2 on-marked-down shutdown-sessions
    server mhpbhesdbn1dcvm1 10.10.229.21:4702 maxconn 5000 check port 8008
    server mhpbhesdbn2dcvm2 10.10.229.22:4702 maxconn 5000 check port 8008
    server mhpbhesdbn3dcvm3 10.10.229.23:4702 maxconn 5000 check port 8008


--------------------------------------------------------------------------------------------------------------------------------------------------------
 apt install keepalived -y

vi /etc/keepalived/keepalived.conf

vrrp_script chk_haproxy {
  script "killall -0 haproxy" # health check script, will force master election when error code is yielded
  interval 2
  weight 5
}
vrrp_instance VI_1 {
  interface ens3
  state MASTER # or BACKUP for backup instances
  virtual_router_id 202 # must be synchronized across instances
  priority 102 # must vary across instances, highest priority instance is master
               # must ensure that (priority + health check weight) of lowest priority instance
               # be high enough to outweight highest priority amongst instances
  advert_int 1
  unicast_src_ip 10.10.229.24  # ip of the instance
  unicast_peer {
    10.10.229.25 # ip of other instances, add more ip as necessary
  }
  // must be the same for all instances
  authentication {
    auth_type PASS
    auth_pass password170
  }
  # virtual ip to bind to master instance
  virtual_ipaddress {
    10.10.229.100
  }
  # call check script defined above
  track_script {
    chk_haproxy
  }
}
